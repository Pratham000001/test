name: Create Release

on:
  push:
    branches:
      - 'main*'
      - 'release*'
      - 'production*' 

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get today's date
        id: date
        run: echo "today=$(date +'%d%m%Y')" >> $GITHUB_ENV

      - name: Fetch all tags
        run: git fetch --tags

      - name: Determine the latest tag and environment
        id: tag
        run: |
          BRANCH_NAME="${{ github.ref_name }}"
          ENVIRONMENT=""

          if [[ "$BRANCH_NAME" == release* ]]; then
            RELEASE_TYPE="rc"
            if [[ "$BRANCH_NAME" == *uat-az1 ]]; then
              ENVIRONMENT="-az1"
            else
              ENVIRONMENT="-az2"
            fi
          elif [[ "$BRANCH_NAME" == production* ]]; then
            RELEASE_TYPE="" # No suffix for production
            ENVIRONMENT=""
          else
            echo "Not on a branch that requires tagging"
            exit 0
          fi

          LATEST_TAG=$(git tag --list "v${{ env.today }}-${RELEASE_TYPE}.*${ENVIRONMENT}" --sort=-v:refname | head -n 1)

          if [[ -z "$LATEST_TAG" ]]; then
            NEW_TAG="v${{ env.today }}-${RELEASE_TYPE}.1${ENVIRONMENT}"
          else
            BASE_TAG=$(echo "$LATEST_TAG" | sed 's/\([0-9]*\)$/\1/')
            VERSION_PART=$(echo "$LATEST_TAG" | sed 's/.*-\([0-9]\+\)$/\1/')
            INCREMENTED_VERSION=$(($VERSION_PART + 1))
      
      # Increment the version number and keep the environment part intact
            NEW_TAG="${BASE_TAG}-${RELEASE_TYPE}.${INCREMENTED_VERSION}${ENVIRONMENT}"
          fi

          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT
          echo "release_type=${RELEASE_TYPE}" >> $GITHUB_ENV
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.new_tag }}
          release_name: ${{ steps.tag.outputs.new_tag }}
          draft: false
          prerelease: ${{ env.release_type == 'rc' }}
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
