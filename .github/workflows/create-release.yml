name: Create Release

on:
  push:
    branches:
      - 'main*'
      - 'release*'
      - 'production*' 

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get today's date
        id: date
        run: echo "today=$(date +'%d%m%Y')" >> $GITHUB_ENV

      - name: Fetch all tags
        run: git fetch --tags

      - name: Determine the latest tag
        id: tag
        run: |
          
          if [[ "${{ github.ref_name }}" == release* || "${{ github.ref_name }}" == main* ]]; then
            LATEST_TAG=$(git tag --list "v${{ env.today }}-rc.*" --sort=-v:refname | head -n 1)
            echo "branch=${{ github.ref_name }}" >> $GITHUB_ENV
            if [[ -z "$LATEST_TAG" ]]; then
              NEW_TAG="v${{ env.today }}-rc.1"
            else
              NEW_TAG=$(echo "$LATEST_TAG" | awk -F. -v OFS=. '{$NF++; print}')
            fi
          elif [[ "${{ github.ref_name }}" == production* ]]; then
            echo "branch=${{ github.ref_name }}" >> $GITHUB_ENV
            LATEST_TAG=$(git tag --list "v${{ env.today }}.*" --sort=-v:refname | head -n 1)
            if [[ -z "$LATEST_TAG" ]]; then
              
              NEW_TAG="v${{ env.today }}.1"
            else
              NEW_TAG=$(echo "$LATEST_TAG" | awk -F. -v OFS=. '{$NF++; print}')
            fi
          else
            echo "Not on a branch that requires tagging"
            exit 0
          fi
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT

      - name: Set release type and tag suffix
        id: set_release_type
        run: |
          if [[ "${{ github.ref_name }}" == release* || "${{ github.ref_name }}" == main* ]]; then
            echo "release_type=pre-release" >> $GITHUB_ENV
            echo "tag_suffix=-rc" >> $GITHUB_ENV
          elif [[ "${{ github.ref_name }}" == production* ]]; then
            echo "release_type=release" >> $GITHUB_ENV
            echo "tag_suffix=" >> $GITHUB_ENV  # No suffix for full release
          fi
      
      - name: Save environment variable as artifact
        uses: actions/upload-artifact@v2
        with:
          name: env-vars
          path: .env-vars 

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.new_tag }}
          release_name: ${{ steps.tag.outputs.new_tag }}
          draft: false
          prerelease: ${{ env.release_type == 'pre-release' }}
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
